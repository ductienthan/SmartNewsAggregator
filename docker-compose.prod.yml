version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: smart-news-postgres-prod
    environment:
      POSTGRES_DB: smart-news
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-smartnews123}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - smart-news-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Redis for BullMQ
  redis:
    image: redis:7-alpine
    container_name: smart-news-redis-prod
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - smart-news-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Database Migration Job (runs once per deployment)
  migration:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    container_name: smart-news-migration
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://postgres:${POSTGRES_PASSWORD:-smartnews123}@postgres:5432/smart-news
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - smart-news-network
    command: sh -c "pnpm prisma migrate deploy"
    restart: "no"

  # API Service
  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    container_name: smart-news-api-prod
    environment:
      NODE_ENV: production
      PORT: 3000
      DATABASE_URL: postgresql://postgres:${POSTGRES_PASSWORD:-smartnews123}@postgres:5432/smart-news
      REDIS_HOST: redis
      REDIS_PORT: 6379
    ports:
      - "3000:3000"
    depends_on:
      migration:
        condition: service_completed_successfully
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - smart-news-network
    restart: unless-stopped

  # Worker Service
  worker:
    build:
      context: .
      dockerfile: apps/worker/Dockerfile
    container_name: smart-news-worker-prod
    environment:
      NODE_ENV: production
      PORT: 3001
      DATABASE_URL: postgresql://postgres:${POSTGRES_PASSWORD:-smartnews123}@postgres:5432/smart-news
      REDIS_HOST: redis
      REDIS_PORT: 6379
    ports:
      - "3001:3001"
    depends_on:
      migration:
        condition: service_completed_successfully
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - smart-news-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  smart-news-network:
    driver: bridge 